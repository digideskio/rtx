/*!
  --------------------------------
  rtx 
  --------------------------------
  + https://luisvinicius167.github.io/rtx/
  + Copyright 2016 Luis Vin√≠cius
  + Licensed under the MIT license
  + Documentation: https://github.com/luisvinicius167/rtx
*/
!function(e,t){"function"==typeof define&&define.amd?define([],t):"undefined"!=typeof module?module.exports=t:e.rtx=t()}(this,function(){"use strict";var e=Array.prototype.slice,t=Array.prototype.push,n={},s={},i={};return i.createStore=function(e){var t=Object.assign({},s);return t.name=e.name,t.listenables=[],n[t.name]={state:e.state,actions:e.actions},t},s.dispatch=function(s,i){var a=e.call(arguments,2),r=[n[this.name].state],o=this,u=o.name;t.apply(r,a);var c=new Promise(function(e,t){n[u].actions[i].apply(null,r),e(n[u].state[s])});c.then(function(e){o.hasOwnProperty("handler")&&o.handler(o.listenables,s,e)})},s.subscribe=function(e){this.listenables.push(e)},s.unsubscribe=function(e){var t=this;this.listenables.forEach(function(n,s){n===e&&t.listenables.splice(s,1)})},s.observe=function(e){this.handler=e},s.get=function(e){return n[this.name].state[e]},i});